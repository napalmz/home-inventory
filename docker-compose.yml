services:
  backend:
    build: ./backend
    container_name: inventory-backend
    environment:
      TZ: Europe/Rome
    ports:
      - "8001:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - backend/.env
    volumes:
      - ./backend:/app

#  frontend:
#    build: ./frontend
#    environment:
#      TZ: Europe/Rome
#    ports:
#      - "3000:80"
#    depends_on:
#      - backend

  db:
    image: postgres:15
    container_name: inventory-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: inventory
      TZ: Europe/Rome
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d inventory"]
      interval: 5s
      retries: 5

#  db_backup:
#    image: postgres:15
#    container_name: inventory-db-backup
#    depends_on:
#      - db
#    volumes:
#      - ./db_backups:/backups
#    environment:
#      POSTGRES_USER: admin
#      POSTGRES_PASSWORD: admin
#      POSTGRES_DB: inventory
#      TZ: Europe/Rome
#    command: >
#      sh -c "while true; do pg_dump -U admin -h db -F c inventory > /backups/db_backup_$(date +'%Y-%m-%d_%H-%M-%S').dump; sleep 86400; done"

volumes:
  pgdata: